name: Deploy to S3 and Invalidate CloudFront

on:
  push:
    branches:
      - main
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build Vite app for S3
        run: pnpm run build

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  deploy-dev:
    needs: build
    if: github.ref_name == 'dev'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      DEV_CF_ID: ${{ secrets.DEV_CLOUDFRONT_DISTRIBUTION_ID }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Sync to Dev S3
        run: |
          cd dist
          aws s3 sync . s3://${{ secrets.DEV_S3_BUCKET_NAME }} --delete

      - name: Invalidate Dev CloudFront
        run: |
          if [ -n "$DEV_CF_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $DEV_CF_ID --paths "/*"
          else
            echo "Dev CloudFront distribution ID not set. Skipping invalidation."
          fi

  deploy-main:
    needs: build
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      PROD_CF_ID: ${{ secrets.PROD_CLOUDFRONT_DISTRIBUTION_ID }}
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Sync to Prod S3
        run: |
          cd dist
          aws s3 sync . s3://${{ secrets.PROD_S3_BUCKET_NAME }} --delete

      - name: Invalidate Prod CloudFront
        run: |
          if [ -n "$PROD_CF_ID" ]; then
            aws cloudfront create-invalidation --distribution-id $PROD_CF_ID --paths "/*"
          else
            echo "Prod CloudFront distribution ID not set. Skipping invalidation."
          fi 